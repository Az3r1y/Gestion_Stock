// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gestion_Stock.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("Gestion_Stock.Models.Categorie", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("INTEGER");

                b.Property<string>("Nom")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.HasKey("Id");

                b.ToTable("Categories");

                // Données d'exemple pour la catégorie
                b.HasData(
                    new { Id = 1, Nom = "Électronique" },
                    new { Id = 2, Nom = "Vêtements" },
                    new { Id = 3, Nom = "Alimentation" }
                );
            });

            modelBuilder.Entity("Gestion_Stock.Models.Client", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("INTEGER");

                b.Property<string>("Adresse")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.Property<string>("Nom")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.Property<string>("Prenom")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.HasKey("Id");

                b.ToTable("Clients");
            });

            modelBuilder.Entity("Gestion_Stock.Models.Order", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("INTEGER");

                b.Property<int>("ClientId")
                    .HasColumnType("INTEGER");

                b.Property<string>("DateCommande")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.Property<int>("ProductId")
                    .HasColumnType("INTEGER");

                b.Property<int>("QuantiteOrder")
                    .HasColumnType("INTEGER");

                b.Property<string>("Status")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.HasKey("Id");

                b.HasIndex("ClientId");

                b.HasIndex("ProductId");

                b.ToTable("Orders");
            });

            modelBuilder.Entity("Gestion_Stock.Models.Produit", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("INTEGER");

                b.Property<int>("CategorieId")
                    .HasColumnType("INTEGER");

                b.Property<string>("Emplacement")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.Property<string>("Nom")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.Property<decimal>("Prix")
                    .HasColumnType("TEXT");

                b.Property<int>("QuantiteProduct")
                    .HasColumnType("INTEGER");

                b.HasKey("Id");

                b.HasIndex("CategorieId");

                b.ToTable("Produits");

                // Données d'exemple pour les produits
                b.HasData(
                    new { Id = 1, Nom = "Ordinateur Portable", QuantiteProduct = 10, Prix = 1000.00m, Emplacement = "A1", CategorieId = 1 },
                    new { Id = 2, Nom = "T-shirt", QuantiteProduct = 50, Prix = 20.00m, Emplacement = "B2", CategorieId = 2 },
                    new { Id = 3, Nom = "Pain", QuantiteProduct = 100, Prix = 2.00m, Emplacement = "C3", CategorieId = 3 }
                );
            });

            modelBuilder.Entity("Gestion_Stock.Models.User", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("INTEGER");

                b.Property<string>("PasswordHash")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.Property<string>("Role")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.Property<string>("Username")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.HasKey("Id");

                b.ToTable("Users");
            });

            modelBuilder.Entity("Gestion_Stock.Models.Order", b =>
            {
                b.HasOne("Gestion_Stock.Models.Client", "Client")
                    .WithMany("Orders")
                    .HasForeignKey("ClientId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("Gestion_Stock.Models.Produit", "Product")
                    .WithMany()
                    .HasForeignKey("ProductId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Client");

                b.Navigation("Product");
            });

            modelBuilder.Entity("Gestion_Stock.Models.Produit", b =>
            {
                b.HasOne("Gestion_Stock.Models.Categorie", "Categorie")
                    .WithMany("Produits")
                    .HasForeignKey("CategorieId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Categorie");
            });

            modelBuilder.Entity("Gestion_Stock.Models.Categorie", b =>
            {
                b.Navigation("Produits");
            });

            modelBuilder.Entity("Gestion_Stock.Models.Client", b =>
            {
                b.Navigation("Orders");
            });
#pragma warning restore 612, 618
        }
    }
}
